// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id                 String   @id @default(uuid())
  email              String   @unique
  name               String
  password           String
  isActive           Boolean  @default(true)
  createdAt          DateTime? @default(now())
  updatedAt          DateTime?
  lastLogin          DateTime?
  loginAttempts      Int      @default(0)
  isLocked           Boolean  @default(false)

  @@map("users")
}

model Roles {
  id                 String @id @default(uuid())
  name               String
  isActive           Boolean  @default(true)
  createdAt          DateTime? @default(now())
  updatedAt          DateTime?

  rolePermissions    RolePermissions[]
  
  @@map("roles")
}

model Permissions {
  id                 String @id @default(uuid())
  name               String
  isActive           Boolean  @default(true)
  createdAt          DateTime? @default(now())
  updatedAt          DateTime?

  rolePermissions    RolePermissions[]

  @@map("permissions")
}

model RolePermissions {
  id                 String @id @default(uuid())

  roleId             String
  role               Roles       @relation(fields: [roleId], references: [id], onDelete: Cascade)

  permissionId       String
  permission         Permissions @relation(fields: [permissionId], references: [id], onDelete: Cascade)

  isActive           Boolean  @default(true)
  createdAt          DateTime? @default(now())
  updatedAt          DateTime?

  @@map("role_permissions")
}